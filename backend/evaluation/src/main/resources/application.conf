com.skp.p2plending {
  service {
    http {
      domain = "p2plending.syrup.co.kr"
      interface = "0.0.0.0"
      port = {
        user = 8888
        evaluation = 8888
        lending = 8888
      }
    }

    hsm = {
      host = "hsm.syrup.co.kr"
      common.alias = "SRPAY_AES_DATA"
      port = 443
      ssl = true
    }

    mysql = {
      dataSourceClass="com.mysql.jdbc.jdbc2.optional.MysqlDataSource"
      properties {
        user="SRPAYADM"
        password="srpayadm#7"
        databaseName="SRPAYADM"
        url="jdbc:mysql://localhost:3306/SRPAYADM"
      }
      numThreads=5
    }
  }

  service-stage {
    http {
      domain = "p2plending-alp.syrup.co.kr"
      interface = "0.0.0.0"
      port = {
        user = 8888
        evaluation = 8888
        lending = 8888
      }
    }

    hsm = {
      host = "hsm-stgpay.syrup.co.kr"
      common.alias = "SRPAY_AES_DATA"
      port = 443
      ssl = true
    }

    mysql = {
      dataSourceClass="com.mysql.jdbc.jdbc2.optional.MysqlDataSource"
      properties {
        user="SRPAYADM"
        password="srpayadm#7"
        databaseName="SRPAYADM"
        url="jdbc:mysql://localhost:3306/SRPAYADM"
      }
      numThreads=5
    }
  }

  dev {
    http {
      domain = "p2plending-dev.syrup.co.kr"
      interface = "0.0.0.0"
      port = {
        user = 8888
        evaluation = 8888
        lending = 8888
      }
      port = ${?port}
    }

    hsm = {
      host = "172.22.242.56"
      common.alias = "DEV_AES_DATA"
      port = 8080
      ssl = false
    }

    mysql = {
      dataSourceClass="com.mysql.jdbc.jdbc2.optional.MysqlDataSource"
      properties {
        user="SRPAYADM"
        password="srpayadm#7"
        databaseName="SRPAYADM"
        url="jdbc:mysql://localhost:3306/SRPAYADM"
      }
      numThreads=5
    }
  }

  dev-stage {
    http {
      domain = "p2plending-stg.syruppay.co.kr"
      interface = "0.0.0.0"
      port = {
        user = 8888
        evaluation = 8888
        lending = 8888
      }
      port = ${?port}
    }

    hsm = {
      host = "172.22.242.56"
      common.alias = "DEV_AES_DATA"
      port = {
        user = 8888
      }
      ssl = false
    }
    mysql = {
      dataSourceClass="com.mysql.jdbc.jdbc2.optional.MysqlDataSource"
      properties {
        user="SRPAYADM"
        password="srpayadm#7"
        databaseName="SRPAYADM"
        url="jdbc:mysql://localhost:3306/SRPAYADM"
      }
      numThreads=5
    }
  }

  http {
    domain = "localhost"
    interface = "0.0.0.0"
    port = {
      user = 8888
      evaluation = 8889
      lending = 8890
    }
  }

  hsm = {
    host = "172.22.242.56"
    common.alias = "DEV_AES_DATA"
    port = 8080
    ssl = false
  }
  mysql = {
    dataSourceClass="com.mysql.jdbc.jdbc2.optional.MysqlDataSource"
    properties {
      user="SRPAYADM"
      password="srpayadm#7"
      databaseName="SRPAYADM"
      url="jdbc:mysql://localhost:3306/SRPAYADM"
    }
    numThreads=5
  }

  querycache = {
    dataSourceClass = "com.skplanet.querycache.jdbc.QCDriver"
    url = "jdbc:eda-hive://172.22.224.33:8655"
    user = "PS04591"
    password = "Ts685734"
    numThreads = 5
  }

  kafka {
    bootstrapServers="localhost:9092"
  }
}

# Logging
akka = {
  loglevel = DEBUG
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  actor.debug {
      receive = on
      lifecycle = on
    }
}


shinhan {
  service {
    tcp {
      ip = ""
      port = 0000
    }
  }
  service-stage {
    tcp {
      ip = ""
      port = 0000
    }
  }
  dev {
    tcp {
      ip = ""
      port = 0000
    }
  }
  dev-stage {
    tcp {
      ip = ""
      port = 0000
    }
  }
  local {
    tcp {
      ip = localhost
      port = 5000
    }
  }
}

# Properties for akka.kafka.ProducerSettings can be
# defined in this section or a configuration section with
# the same layout.
akka.kafka.producer {
  # Tuning parameter of how many sends that can run in parallel.
  parallelism = 100

  # How long to wait for `KafkaProducer.close`
  close-timeout = 10s

  # Fully qualified config path which holds the dispatcher configuration
  # to be used by the producer stages. Some blocking may occur.
  # When this value is empty, the dispatcher configured for the stream
  # will be used.
  use-dispatcher = "akka.kafka.default-dispatcher"

  # Properties defined by org.apache.kafka.clients.producer.ProducerConfig
  # can be defined in this configuration section.
  kafka-clients {
  }
}
